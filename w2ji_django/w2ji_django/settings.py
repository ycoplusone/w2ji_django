"""
Django settings for w2ji_django project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'vkmrmmqzo^5$#zfry5vbn+u6*l7$)cllp-5d+%bp#-9l@@iy-$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True # 테스트 일경우 true , 실서버 배포시 false

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    
    'django.contrib.admin', # 관리자용 사이트
    'django.contrib.auth', # 인증 시스템
    'django.contrib.contenttypes', # 컨텐츠 타입을 위한 프레임워크
    'django.contrib.sessions', # 세션 프레임워크
    'django.contrib.messages', # 메세징 프레임워크
    'django.contrib.staticfiles', # 정적 파일 관리 프레임워크
    #'account',  # account 로그인 앱 등록
    #'system_user',  # 사용자관리 시스템 개발.
    
    #'blog',
    'zsy' , #시스템관련 
    'polls.apps.PollsConfig',
    'test_song.apps.TestSongConfig',
    
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'w2ji_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR , "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]



WSGI_APPLICATION = 'w2ji_django.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default' : {
        'ENGINE'  : 'django.db.backends.mysql'  , # 엔진 설정
        'NAME'    : 'com_mall'                  , # db스키마      
        'USER'    : 'com'                       , # db 계정            
        'PASSWORD': 'com01'                     , # db 비밀번호     
        'HOST'    : 'localhost'                 , # 서버 정보
        'PORT'    : '3306'                      , # 서버 포트
        'OPTIONS' : {
            'init_command': 'SET sql_mode="STRICT_TRANS_TABLES"'
        }        
    } ,    
    
    'sqllist': {
        'ENGINE'  : 'django.db.backends.sqlite3'            ,
        'NAME'    : os.path.join(BASE_DIR, 'db.sqlite3')    ,
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'ko'
#LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR , 'static')]
